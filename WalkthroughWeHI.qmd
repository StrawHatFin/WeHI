---
title: "Wellbeing Hononga Index (WeHI) analysis walkthrough"
description: Providing the code, outputs, and bonus plots from our 11-step psychometric analysis
author: "Finley Ngarangi Johnson"
editor: visual
format:
  html:
    code-fold: true
    code-summary: "Show code"
    toc: true
    toc_float: true
    toc-location: right
    theme: quartz 
    title-block-banner: true
execute:
  warning: false
---

## Nau mai haere mai!

Tēnā koe e hoa, this document is here to walk you through the statistical analysis we did as part of the validation for our new self-report measure of Māori wellbeing - the 'WeHI'.

We drew upon a bunch of different statistical analyses to gather evidence supporting the validity of the WeHI.

These analyses provided heaps of really cool information about our tool and showed that our hononga (our connections to Māori knowledges, practices, peoples, places, spaces, and things) are a core part of our wellbeing as Māori people.

Overall, we found some really encouraging evidence. The WeHI seems to measure what it is supposed to, and appears to be psychometrically robust.

This is only meant to be a quick outline of what we did to compliment our code (for if you wanted to do this yourself). Please refer to the main publication for the detailed kōrero and explanations.

### Background

The Ngaruroro model describes wellbeing as the embodied and active process of being well in relation with one’s (1) here tāngata (social and familial ties), (2) te taiao (the environment), and (3) taonga tuku iho (cultural treasures) while doing what one can to make lifestyle choices that are conducive to the health of one’s (4) tinana (body) and (5) wairua (spirit) while cultivating a balanced (6) ngākau (inner-system), fulfilling (7) matea (core needs) and exercising your (8) mana (authority).

We started our analyses with 41 survey items that were developed based on this Ngaruroro model. The 41 items were spread the across the eight 'au' (streams) of wellbeing, five items per theme.

One of the goals of this validation process was to come up with a shorter version of our measure. 41 items is quite long and not everyone who will want to use the WeHI will have that much time. We planned to do this by selecting the three strongest items from each theme, putting them together into a scale, and then running our statistical analyses.

### Step 0 - Set up

::: {.callout-note appearance="simple" collapse="true"}
### Loading packages & data

##### Packages

```{r load_packages}

library(tidyverse)
library(lavaan)
library(readr)
library(mclust)
library(dplyr)
library(corrplot)
library(semTools)
library(mokken)
library(ggplot2)
library(latticeExtra)
library(mirt)
library(kableExtra)
library(rgl)
library(D3mirt)
library(haven)
source("funs.R")
source("FinFunction.R")

```

##### Data

```{r load_data}

df <- read_csv("NR testing data.csv")

df <- df %>%
  mutate(dAge = as.numeric(ifelse(dAge == "old", mean(as.numeric(dAge), na.rm=TRUE), dAge)))

scale <- df[29:69]

selected_vars <- c("Q1", "Q2", "Q4", "Q7", "Q8", "Q11", "Q13", "Q15", "Q16", "Q18", "Q19", "Q21", 
                   "Q22", "Q23", "Q24", "Q27", "Q28", "Q29", "Q33", "Q34", "Q35", "Q37", "Q38", "Q40")

scalemod <- df[selected_vars]


selected_vars2 <- c("Q1", "Q2", "Q4", "Q7", "Q8", "Q11", "Q13", "Q15", "Q16", "Q18", "Q19", "Q21", 
                   "Q22", "Q23", "Q27", "Q28", "Q29", "Q35", "Q37", "Q38", "Q40")

scalepoto <- df[selected_vars2]

```
:::

### Step 1 - Descriptives & Demographics

::: {.callout-note appearance="simple" collapse="true"}
### Age groups

```{r age_demo, fig.width=10, fig.height=10, out.width="100%"}

age_counts <- as.data.frame(table(df$dAge))

age_counts2 <- age_counts %>%
  mutate(Var1 = as.numeric(Var1)) %>%
  mutate(AgeGroup = cut(Var1, 
                        breaks = c(-Inf, 30, 65, Inf), 
                        labels = c("Rangatahi", "Pakeke", "Kaumatua")))

age_counts2 <- age_counts2 %>%
  group_by(AgeGroup) %>%
  summarise(Freq = sum(Freq)) %>%
  ungroup()

print(age_counts2)

ggplot(age_counts2, aes(x = AgeGroup, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Age Groups of Participants", x = "Age Group", y = "Number of Participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5, size = 10),  
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm"))

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Gender

```{r gender_groups, fig.width=10, fig.height=10, out.width="100%"}

gender_counts <- as.data.frame(table(df$dIdentify))
print(gender_counts)

simplified_gender_counts <- gender_counts %>%
  mutate(Simplified = case_when(
    grepl("Female", Var1) & !grepl("Non-binary|Transgender|Other", Var1) ~ "Female",
    grepl("Male", Var1) & !grepl("Non-binary|Transgender|Other", Var1) ~ "Male",
    TRUE ~ "Non-binary/Transgender/Other"
  )) %>%
  group_by(Simplified) %>%
  summarise(Freq = sum(Freq)) %>%
  ungroup()

print(simplified_gender_counts)


ggplot(simplified_gender_counts, aes(x = Simplified, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Gender Identity of Participants", x = "Gender Identity", y = "Number of Participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5, size = 10),  
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )


```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Regional representation

```{r region, fig.width=10, fig.height=10, out.width="100%"}

geo_counts <- as.data.frame(table(df$dRegion))

custom_order <- c("Northland", "Auckland", "Waikato", "Bay of Plenty", "Gisborne", 
                  "Taranaki", "Hawke's Bay", "Manawatū - Whanganui", 
                  "Wellington", "Marlborough / Nelson / Tasman / West Coast", 
                  "Canterbury", "Otago / Southland", 
                  "New South Wales", "Queensland", "Victoria", "Western Australia", 
                  "Outside of Aotearoa and Australia")

geo_counts$Var1 <- factor(geo_counts$Var1, levels = custom_order)

geo_counts <- geo_counts %>% arrange(Var1)

ggplot(geo_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Number of participants in each rohe", x = "Region", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm") 
  ) 

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Type of place grown up

```{r rural_1, fig.width=10, fig.height=10, out.width="100%"}

GU_counts <- as.data.frame(table(df$dGrewUp))

custom_order_GU <- c("Farming settlement", "Small town", "Large town", "Small city", "Large city")

GU_counts$Var1 <- factor(GU_counts$Var1, levels = custom_order_GU)

ggplot(GU_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Where participants grew up", x = "Type of settlement", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  ) 

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Type of place living now

```{r rural_2, fig.width=10, fig.height=10, out.width="100%"}

LN_counts <- as.data.frame(table(df$dLiveNow))

custom_order_LN <- c("Farming settlement", "Small town", "Large town", "Small city", "Large city")

LN_counts$Var1 <- factor(LN_counts$Var1, levels = custom_order_LN)

ggplot(LN_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Where participants live now", x = "Type of settlement", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Personal income

```{r personal_income, fig.width=10, fig.height=10, out.width="100%"}

PI_counts <- as.data.frame(table(df$dPersonalIncome))

custom_order_PI <- c("Less than $14,000", "$14,001 - $48,000", "$48,001 - $70,000", 
                     "$70,001 - $180,000", "More than $180,000")

PI_counts$Var1 <- factor(PI_counts$Var1, levels = custom_order_PI)

ggplot(PI_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Personal income of participants", x = "Income brackets", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),  
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Household income

```{r household_income, fig.width=10, fig.height=10, out.width="100%"}

HI_counts <- as.data.frame(table(df$dHouseIncome))

custom_order_HI <- c("Less than $14,000", "$14,001 - $48,000", "$48,001 - $70,000", 
                     "$70,001 - $180,000", "More than $180,000")

HI_counts$Var1 <- factor(HI_counts$Var1, levels = custom_order_HI)

ggplot(HI_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Household income of participants", x = "Income brackets", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),  
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Self reported ability to speak Te Reo Māori

```{r speak_maori, fig.width=10, fig.height=10, out.width="100%"}

SM_counts <- as.data.frame(table(df$dSpeakM))

custom_order_SM <- c("No more than a few words or phrases", "Not very well", "Fairly well", 
                     "Well", "Very well")

SM_counts$Var1 <- factor(SM_counts$Var1, levels = custom_order_SM)

ggplot(SM_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Ability to speak te reo Māori", x = "Ability levels", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),  
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Self reported ability to understand spoken reo Māori

```{r understand_maori, fig.width=10, fig.height=10, out.width="100%"}

UM_counts <- as.data.frame(table(df$dUnderstandM))

custom_order_UM <- c("No more than a few words or phrases", "Not very well", "Fairly well", 
                     "Well", "Very well")

UM_counts$Var1 <- factor(UM_counts$Var1, levels = custom_order_UM)

ggplot(UM_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Ability to understand spoken te reo Māori", x = "Ability levels", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )

```
:::

::: {.callout-note appearance="simple" collapse="true"}
### Self reported ability to read Te Reo Māori

```{r read_maori, fig.width=10, fig.height=10, out.width="100%"}

RM_counts <- as.data.frame(table(df$dReadM))

custom_order_RM <- c("No more than a few words or phrases", "Not very well", "Fairly well", "Well", "Very well")

RM_counts$Var1 <- factor(RM_counts$Var1, levels = custom_order_RM)

ggplot(RM_counts, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "#4CBDCB") +
  geom_text(aes(label = Freq), vjust = -0.5) +
  labs(title = "Ability to read te reo Māori", x = "Ability levels", y = "Number of participants") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),  
    plot.title = element_text(hjust = 0.5, size = 14),  
    plot.margin = unit(c(1, 3, 1, 1), "cm")  
  )

```
:::

#### How people responded using the Pūhā scale

::: {.callout-note appearance="simple" collapse="true"}
### Response frequency plot

```{r likert_spread, fig.width=10, fig.height=10, out.width="100%"}
likert_data_new <- scale %>% pivot_longer(cols = Q1:Q41, names_to = "question", values_to = "response")

likert_spread_data_new <- likert_data_new %>%
  group_by(question, response) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(question) %>%
  mutate(pct = count / sum(count))

likert_spread_data_new$question <- factor(likert_spread_data_new$question, 
                                      levels = rev(unique(likert_spread_data_new$question)))


likert_spread_data_new$question <- factor(likert_spread_data_new$question, 
                                      levels = rev(paste0("Q", 1:41)))


likert_spread_data_new$response <- factor(likert_spread_data_new$response, levels = c(5, 4, 3, 2, 1))


custom_colors <- c("1" = "#783615",  
                   "2" = "#acdd74",  
                   "3" = "#6fc06b",  
                   "4" = "#43a53d",  
                   "5" = "#fed10a")  


likert_spread_data_new %>%
  ggplot(aes(x = question, y = pct, fill = as.ordered(response))) +
  geom_bar(position = "fill", stat = "identity") +
  scale_fill_manual(values = custom_colors) +  
  theme_classic() +
  labs(
    x = "Question",
    y = "Proportion",
    fill = "Response level"
  ) +
  coord_flip()

```
:::

#### Relationships between the items

::: {.callout-note appearance="simple" collapse="true"}
### Inter-item correlation plot

```{r correlation_items, fig.width=10, fig.height=10, out.width="100%"}
scale %>%
  cor() %>%
  corrplot(method = "circle", type = "upper", col = COL2('PiYG', n=200), 
         tl.cex = 1.3,  
         tl.col = "black", 
       )  
```
:::

### Step 2 - Mokken Scale Analyses

::: {.callout-note appearance="simple" collapse="true"}
#### Exploring Item Scalability Coefficients & Scale H Coefficient

```{r msa_1a}
Hvalues <- coefH(scale)

```

### Conducting the Automated Item Selection Procedure

```{r msa_1b}
moscales.for.lowerbounds <- function(scale, lowerbounds = seq(from=0.05, to=0.70, by=0.05)) {
  ret.value <- NULL
  
  for (lowerbound in lowerbounds) {
    tmp <- aisp(scale, lowerbound = lowerbound)
    
    if (is.null(ret.value)) {
      ret.value <- data.frame("Item" = rownames(tmp), "Scales" = tmp[, 1])
    } else {
      ret.value <- cbind(ret.value, "Scales" = tmp[, 1])
    }
    
    names(ret.value)[ncol(ret.value)] <- sprintf("%.2f", lowerbound)
  }
  
  rownames(ret.value) <- NULL
  return(ret.value)
}

aisp_results <- moscales.for.lowerbounds(scale)

```
:::

### Step 3 - Item Response Theory analyses

::: {.callout-note appearance="simple" collapse="true"}
#### Exploring dimensionality

##### Testing the uni-dimensional model

```{r irt_1}
OneDAll <- (mirt(scale, 1, verbose = FALSE, itemtype = 'graded', SE = TRUE))
M2(OneDAll, type = "C2", calcNULL = FALSE)

```

##### Testing the bi-dimensional model

```{r irt_2}
TwoDAll <- (mirt(scale, 2, verbose = FALSE, itemtype = 'graded', SE = TRUE))
M2(TwoDAll, type = "C2", calcNULL = FALSE)

```

##### Seeing if the bi-dimensional model is significantly better than the uni-dimensional model

```{r irt_3}

p_value <- pchisq(10914.6 - 4674.11, df = 779 - 739, lower.tail = FALSE)

cat("ΔM2(40) =", 10914.6 - 4674.11, ", p =", p_value, "\n")


```

##### Results

The bi-dimensional model fits the data significantly better than the uni-dimensional model

This suggests we should be looking at this data using Multidimensional IRT

The MIRT Category Response Surfaces, Item Information Surfaces, Scale Information Surface, and Scale Error Surface can be found in the projects OSF repository.
:::

### Step 4 - Confirmatory Factor Analysis

::: {.callout-note appearance="simple" collapse="true"}
#### Testing the overarching one factor model

```{r rawdog_cfa1}
cfa_all_model1 <- '
MW=~ Q1 + Q2 + Q3 + Q4 + Q5 + Q6 + Q7 + Q8 + Q9 + Q10 + Q11 + Q12 + Q13 + Q14 + 
      Q15 + Q16 + Q17 + Q18 + Q19 + Q20 + Q21 + Q22 + Q23 + Q24 + Q25 + Q26 + 
      Q27 + Q28 + Q29 + Q30 + Q31 + Q32 + Q33 + Q34 + Q35 + Q36 + Q37 + Q38 +
      Q39 + Q40 + Q41
'

cfa_all_fit1 <- cfa(model = cfa_all_model1, data=df, estimator="DWLS")

summary(cfa_all_fit1, fit = T, std = T)

```

#### Testing the eight factor structure from the Ngaruroro model

```{r rawdog_cfa2}
cfa_all_model2 <- '
MW=~ Taiao + Here + Taonga + Mana + Matea + Ngakau + Tinana + Wairua
Taiao =~ Q1 + Q2 + Q3 + Q4 + Q5
Here =~ Q6 + Q7 + Q8 + Q9 + Q10 + Q11
Taonga =~ Q12 + Q13 + Q14 + Q15 + Q16 
Mana =~ Q17 + Q18 + Q19 + Q20 + Q21
Matea =~ Q22 + Q23 + Q24 + Q25 + Q26
Ngakau =~ Q27 + Q28 + Q29 + Q30 + Q31 
Tinana =~ Q32 + Q33 + Q34 + Q35 + Q36
Wairua =~ Q37 + Q38 + Q39 + Q40 + Q41
'

cfa_all_fit2 <- cfa(model = cfa_all_model2, data=df, estimator="DWLS")

summary(cfa_all_fit2, fit = T, std = T)

```
:::

### Step 5 - Item reduction process

::: {.callout-note appearance="simple" collapse="true"}
### Exporting factor loadings to help select the best items

We produced code to output a spreadsheet with ordered loadings so we could see the top three performing items per dimension based on these loadings, our descriptive statistics, item response frequencies, item scalability coefficients, item category curves, and item information curves. In the spreadsheet we manually inputted the MSA Item Scalability coefficients to inform our item selection process. If we deviate from this then a note is included in the document. This process happened in Excel so no code reflects this part of the process

```{r mod_items_ordered}
#| eval: false
mod_items_ordered <- summary(newmodMGCFA_Fit, std = TRUE)$pe %>%
  filter(!grepl("Q", lhs) & grepl("Q", rhs)) %>%
  select(lhs, rhs, est, std.lv) %>%
  group_by(lhs) %>%
  arrange(lhs, desc(std.lv))

write_csv(mod_items_ordered, "mod_items_ordered_fits.csv")

```
:::

### Step 6 - Second Mokken Scale Analysis

::: {.callout-note appearance="simple" collapse="true"}
### Exploring new Item Scalability Coefficients & Scale H Coefficient

```{r msa_2a}

selected_vars2 <- c("Q1", "Q2", "Q4", "Q7", "Q8", "Q11", "Q13", "Q15", "Q16", "Q18", "Q19", "Q21", 
                    "Q22", "Q23", "Q27", "Q28", "Q29", "Q35", "Q37", "Q38", "Q40")

scalepoto <- df[selected_vars2]

Hvalues <- coefH(scalepoto)

```

### Conducting the second Automated Item Selection Procedure

```{r msa_2b}

moscales.for.lowerbounds2 <- function(scalemod, lowerbounds = seq(from=0.05, to=0.70, by=0.05)) {
  ret.value <- NULL
  
  for (lowerbound in lowerbounds) {
    tmp <- aisp(scalemod, lowerbound = lowerbound)
    
    if (is.null(ret.value)) {
      ret.value <- data.frame("Item" = rownames(tmp), "Scales" = tmp[, 1])
    } else {
      ret.value <- cbind(ret.value, "Scales" = tmp[, 1])
    }
    
    names(ret.value)[ncol(ret.value)] <- sprintf("%.2f", lowerbound)
  }
  
  rownames(ret.value) <- NULL
  return(ret.value)
}

aisp_results2 <- moscales.for.lowerbounds2(scalemod)

```
:::

### Step 7 - Multidimensional Item Response Theory analyses

::: {.callout-note appearance="simple" collapse="true"}
### Exploring the dimensionality of new model

Testing the uni-dimensional model

```{r irt_4}

MIRTMod1D <- (mirt(scalepoto, 1, verbose = FALSE, itemtype = 'graded', SE = TRUE))
M2(MIRTMod1D, type = "C2", calcNULL = FALSE)
coef(MIRTMod1D)

```

Testing the bi-dimensional model

```{r irt_5}

MIRTMod2D <- (mirt(scalepoto, 2, verbose = FALSE, itemtype = 'graded', SE = TRUE))
M2(MIRTMod2D, type = "C2", calcNULL = FALSE)

```

Seeing if the bi-dimensional model is significantly better than the uni-dimensional model

```{r irt_6}

p_value2 <- pchisq(4416.044 - 1593.668, df = 189 - 169, lower.tail = FALSE)

cat("ΔM2(20) =", 4416.044 - 1593.668, ", p =", p_value2, "\n")

```

RESULTS

The bi-dimensional model fits the data significantly better than the uni-dimensional model

This suggests we should be looking at this data using Multidimensional IRT

The MIRT Category Response Surfaces, Item Information Surfaces, Scale Information Surface, and Scale Error Surface can be found in both the projects GitHub and OSF repositories.
:::

::: {.callout-note appearance="simple" collapse="true"}
### MIRT plots

```{r irt_7, fig.width=10, fig.height=10, out.width="100%"}

plot(MIRTMod2D, type = 'info', main = "Scale Information Surface for the WeHI (X = -90°,Y = -70°, Z = 0°)" , theta_lim = c(-3, 3), col.regions = colorRampPalette(c("magenta", "cyan"))(100), rot = list(xaxis = -90, yaxis = -70, zaxis = 0))

plot(MIRTMod2D, type = 'info', main = "Scale Information Surface for the WeHI (X = -80°,Y = -10°, Z = 0°)" , theta_lim = c(-3, 3), col.regions = colorRampPalette(c("magenta", "cyan"))(100), rot = list(xaxis = -80, yaxis = -10, zaxis = 0))

# Combining plots for publication 
#p1 <- plot(MIRTMod2D, type = 'info',
#           theta_lim = c(-3, 3),
#           col.regions = colorRampPalette(c("magenta", "cyan"))(100),
#           rot = list(xaxis = -90, yaxis = -70, zaxis = 0))

#p1 <- update(p1, main = "Scale Information Surface for the WeHI from two angles")


#p2 <- plot(MIRTMod2D, type = 'info',
#           theta_lim = c(-3, 3),
#           col.regions = colorRampPalette(c("magenta", "cyan"))(100),
#           rot = list(xaxis = -80, yaxis = -10, zaxis = 0))

#p2 <- update(p2, main = "Scale Information Surface for the WeHI from two angles")

#combined_plot <- c(p2, p1, layout = c(2, 1))
#print(combined_plot)


plot(MIRTMod2D, type = 'SE', main = "Scale Error Surface for the WeHI (X = -90°,Y = -70°, Z = 0°)" , theta_lim = c(-3, 3), col.regions = colorRampPalette(c("magenta", "cyan"))(100), rot = list(xaxis = -90, yaxis = -70, zaxis = 0))

plot(MIRTMod2D, type = 'SE', main = "Scale Error Surface for the WeHI (X = -80°,Y = -10°, Z = 0°)" , theta_lim = c(-3, 3), col.regions = colorRampPalette(c("magenta", "cyan"))(100), rot = list(xaxis = -80, yaxis = -10, zaxis = 0))

#p3 <- plot(MIRTMod2D, type = 'SE', main = "Scale Error Surface for the WeHI (X = -90°,Y = -70°, Z = 0°)" , theta_lim = c(-3, 3), col.regions = colorRampPalette(c("magenta", "cyan"))(100), rot = list(xaxis = -90, yaxis = -70, zaxis = 0))

#p3 <- update(p3, main = "Scale Information Surface for the WeHI from two angles")

#p4 <- plot(MIRTMod2D, type = 'SE', main = "Scale Error Surface for the WeHI (X = -80°,Y = -10°, Z = 0°)" , theta_lim = c(-3, 3), col.regions = colorRampPalette(c("magenta", "cyan"))(100), rot = list(xaxis = -80, yaxis = -10, zaxis = 0))

#p4 <- update(p4, main = "Scale Error Surface for the WeHI from two angles")

#combined_plot <- c(p4, p3, layout = c(2, 1))
#print(combined_plot)


```
:::

### Step 8 - Descriptive Multidimensional Item Response Theory (DMIRT) Analysis

::: {.callout-note appearance="simple" collapse="true"}
### D3MIRT results

```{r dmirt, test-rgl, webgl=TRUE}

knitr::knit_hooks$set(webgl = hook_webgl)

b <- modid(scalepoto, factors = 2, itemtype = "graded", lower = 1, upper = 1)
summary(b)

d3_fit <- D3mirt(scalepoto, modid = c("Q19", "Q8"))

summary(d3_fit)

```
:::

::: {.callout-note appearance="simple" collapse="TRUE"}
### 3D interactive plot visualising the within-item multidimensionality

```{r dmirt2, test-rgl, webgl=TRUE }

knitr::knit_hooks$set(webgl = hook_webgl)

plot(d3_fit, constructs = FALSE, axis.length = c(5,3,5,3,3,2), col = c("#FF00FF", "#D455FF", "#AA80FF", "#55AAFF", "#00FFFF"), x.lab = "Wellbeing", y.lab = "Hononga", z.lab = "Taiao")


```
:::

### Step 9 - Confirmatory Factor Analysis with the new twenty-one item model

::: {.callout-note appearance="simple" collapse="true"}
### Testing the structure of the new seven factor 21 item model

```{r cfa_trimmed}
newmodMGCFA <- 'MW=~ Taiao + Here + Taonga + Mana + Matea + Ngakau + Wairua
Taiao =~ Q1 + Q2 + Q4 
Here =~ Q7 + Q8 + Q11
Taonga =~ Q13 + Q15 + Q16 
Mana =~ Q18 + Q19 + Q21
Matea =~ Q22 + Q23 + Q35
Ngakau =~ Q27 + Q28 + Q29
Wairua =~ Q37 + Q38 + Q40'

newmodMGCFA_Fit <- cfa(model = newmodMGCFA, data=df, estimator="DWLS")

fitmeasures(newmodMGCFA_Fit, c("cfi", "tli", "srmr", "rmsea", "chisqr", "df"))

summary(newmodMGCFA_Fit, fit = T, std = T, rsquare = T)

```
:::

### Step 10 - Multi-Group Confirmatory Factor Analyses

::: {.callout-note appearance="simple" collapse="true"}
#### Age

```{r RevisedMgcfa_age}

df <- df %>%
  mutate(age_cat2 = cut(dAge, 
                            breaks = c (-Inf, 30, 55, Inf), 
                            labels = c("Rangatahi", "Pakeke", "Koroua")))

# mgcfa function comes from FinFunction.R
modmgcfa_age3 <- modmgcfa(grp = "age_cat2")

table(df$age_cat2)

summary(modmgcfa_age3)


```

#### Gender

```{r RevisedMgcfa_gender}
df <- df %>%
  mutate(gender_cat = ifelse(dIdentify %in% c("Female", "Male"), dIdentify, NA))

# modmgcfa function comes from FinFunction.R
modmgcfa_gender <- modmgcfa(grp = "gender_cat")

summary(modmgcfa_gender)

```

#### Income

##### Household income

```{r RevisedMgcfa_income}
df <- df %>%
  mutate(income_cat = ifelse(dHouseIncome %in% c("$14,001 - $48,000", "Less than $14,000"), "Less than $48,000", dHouseIncome))
# modmgcfa function comes from FinFunction.R
modmgcfa_income <- modmgcfa(grp = "income_cat")

summary(modmgcfa_income)

```

##### Personal income

```{r RevisedMgcfa_income2}
df <- df %>%
  mutate(income_cat2 = ifelse(dPersonalIncome %in% c("$14,001 - $48,000", "Less than $14,000"), "Less than $48,000", ifelse(dPersonalIncome %in% c("More than $180,000", "$70,001 - $180,000"), "More than $70,000", dPersonalIncome)))

# modmgcfa function comes from FinFunction.R
modmgcfa_income2 <- modmgcfa(grp = "income_cat2")

table(df$income_cat2)

summary(modmgcfa_income2)

```

#### Te Reo Māori

##### Speak te reo Māori

```{r RevisedMgcfa_reo}
df <- df %>%
  mutate(reo_cat = ifelse(dSpeakM %in% c("Well", "Very well"), "Well", dSpeakM))

# mgcfa function comes from FinFunction.R
modmgcfa_reo <- modmgcfa(grp = "reo_cat")

summary(modmgcfa_reo)

```

##### Understand spoken reo Māori

```{r RevisedMgcfa_reo2}
df <- df %>%
  mutate(reo_cat2 = ifelse(dUnderstandM %in% c("Well", "Very well"), "Well", dUnderstandM))

# mgcfa function comes from FinFunction.R
modmgcfa_reo2 <- modmgcfa(grp = "reo_cat2")

summary(modmgcfa_reo2)

```

#### Read reo Māori

```{r RevisedMgcfa_reo3}
df <- df %>%
  mutate(reo_cat3 = ifelse(dReadM %in% c("Well", "Very well"), "Well", dReadM))

# mgcfa function comes from FinFunction.R
modmgcfa_reo3 <- modmgcfa(grp = "reo_cat3")

summary(modmgcfa_reo3)

```
:::

### Step 11 - Convergent validity

::: {.callout-note appearance="simple" collapse="true"}
#### World Health Organisation - 5

```{r who_comparison2, fig.width=10, fig.height=10, out.width="100%"}
who_comparison_data <- df %>%
  dplyr::select(starts_with("WHO")) %>%
  bind_cols(
    predict(newmodMGCFA_Fit) 
    ) %>% 
  mutate(WHO5_1 = recode_who(WHO5_1),
         WHO5_2 = recode_who(WHO5_2),
         WHO5_3 = recode_who(WHO5_3),
         WHO5_4 = recode_who(WHO5_4),
         WHO5_5 = recode_who(WHO5_5)
         ) %>%
  mutate(who_sum = WHO5_1 + WHO5_2 + WHO5_3 + WHO5_4 + WHO5_5, .keep = "unused")
  
who_comparison_data %>%
  pivot_longer(cols = !all_of("who_sum"), names_to = "theme", values_to = "est") %>%
  ggplot(aes(x=who_sum, y=est)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~theme)

```

#### Satisfaction With Life Scale

```{r swls_comparison, fig.width=10, fig.height=10, out.width="100%"}
swls_comparison_data <- df %>%
  dplyr::select(starts_with("SWLS")) %>%
  bind_cols(
    predict(newmodMGCFA_Fit) 
    ) %>% 
  mutate(SWLS_1 = recode_swls(SWLS_1),
         SWLS_2 = recode_swls(SWLS_2),
         SWLS_3 = recode_swls(SWLS_3),
         SWLS_4 = recode_swls(SWLS_4),
         SWLS_5 = recode_swls(SWLS_5)
         ) %>%
  mutate(swls_sum = SWLS_1 + SWLS_2 + SWLS_3 + SWLS_4 + SWLS_5, .keep = "unused")
  
swls_comparison_data %>%
  pivot_longer(cols = !all_of("swls_sum"), names_to = "theme", values_to = "est") %>%
  ggplot(aes(x=swls_sum, y=est)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~theme)

```

#### Comparison correlation matrix

```{r correlation_comparisons, fig.width=10, fig.height=10, out.width="100%"}

bind_cols(
  who_comparison_data,
  "swls_sum" = swls_comparison_data$swls_sum
  ) %>%
  cor() %>%
  corrplot(method="number", type="upper", col = COL2('PiYG', n=200), 
         tl.cex = 1.3,  
         tl.col = "black", 
       )  

```
:::
